# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module OpenApiSDK
  module Shared
    class StripeTransferRequest < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :amount, T.nilable(Integer), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('amount') } }
      field :asset, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('asset') } }
      field :destination, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('destination') } }      # A set of key/value pairs that you can attach to a transfer object.
      # It can be useful for storing additional information about the transfer in a structured format.
      # 
      field :metadata, T.nilable(T::Hash[Symbol, Object]), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('metadata') } }

      sig { params(amount: T.nilable(Integer), asset: T.nilable(String), destination: T.nilable(String), metadata: T.nilable(T::Hash[Symbol, Object])).void }
      def initialize(amount: nil, asset: nil, destination: nil, metadata: nil)
        @amount = amount
        @asset = asset
        @destination = destination
        @metadata = metadata
      end
    end
  end
end
