# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module OpenApiSDK
  module Shared
    class ConnectorsConfigsResponseDataConnectorKey < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :data_type, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('dataType') } }
      field :required, T::Boolean, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('required') } }

      sig { params(data_type: String, required: T::Boolean).void }
      def initialize(data_type: nil, required: nil)
        @data_type = data_type
        @required = required
      end
    end

    class ConnectorsConfigsResponseDataConnector < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :key, ConnectorsConfigsResponseDataConnectorKey, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('key') } }

      sig { params(key: ConnectorsConfigsResponseDataConnectorKey).void }
      def initialize(key: nil)
        @key = key
      end
    end

    class ConnectorsConfigsResponseData < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :connector, ConnectorsConfigsResponseDataConnector, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('connector') } }

      sig { params(connector: ConnectorsConfigsResponseDataConnector).void }
      def initialize(connector: nil)
        @connector = connector
      end
    end
# 2 - OK
    class ConnectorsConfigsResponse < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :data, ConnectorsConfigsResponseData, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('data') } }

      sig { params(data: ConnectorsConfigsResponseData).void }
      def initialize(data: nil)
        @data = data
      end
    end
  end
end
