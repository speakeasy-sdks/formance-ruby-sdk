# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/paymentstatus_enum'

module OpenApiSDK
  module Shared
    class PaymentAdjustment < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :absolute, T::Boolean, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('absolute') } }
      field :amount, Integer, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('amount') } }
      field :date, DateTime, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('date'), 'decoder': Utils.datetime_from_iso_format(false) } }
      field :raw, T::Hash[Symbol, Object], { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('raw') } }
      field :status, PaymentStatusEnum, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('status'), 'decoder': Utils.enum_from_string(Shared::PaymentStatusEnum, false) } }

      sig { params(absolute: T::Boolean, amount: Integer, date: DateTime, raw: T::Hash[Symbol, Object], status: PaymentStatusEnum).void }
      def initialize(absolute: nil, amount: nil, date: nil, raw: nil, status: nil)
        @absolute = absolute
        @amount = amount
        @date = date
        @raw = raw
        @status = status
      end
    end
  end
end
