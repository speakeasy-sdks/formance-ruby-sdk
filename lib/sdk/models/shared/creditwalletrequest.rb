# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/monetary'

module OpenApiSDK
  module Shared
    class CreditWalletRequest < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :amount, Monetary, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('amount') } }
      field :sources, T::Array[Object], { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('sources') } }      # The balance to credit
      field :balance, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('balance') } }      # Metadata associated with the wallet.
      field :metadata, T.nilable(T::Hash[Symbol, Object]), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('metadata') } }
      field :reference, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('reference') } }

      sig { params(amount: Monetary, sources: T::Array[Object], balance: T.nilable(String), metadata: T.nilable(T::Hash[Symbol, Object]), reference: T.nilable(String)).void }
      def initialize(amount: nil, sources: nil, balance: nil, metadata: nil, reference: nil)
        @amount = amount
        @sources = sources
        @balance = balance
        @metadata = metadata
        @reference = reference
      end
    end
  end
end
