# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module OpenApiSDK
  module Shared
    class TransactionData < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :postings, T::Array[Posting], { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('postings') } }
      field :metadata, T.nilable(T::Hash[Symbol, Object]), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('metadata') } }
      field :reference, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('reference') } }
      field :timestamp, T.nilable(DateTime), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('timestamp'), 'decoder': Utils.datetime_from_iso_format(true) } }

      sig { params(postings: T::Array[Posting], metadata: T.nilable(T::Hash[Symbol, Object]), reference: T.nilable(String), timestamp: T.nilable(DateTime)).void }
      def initialize(postings: nil, metadata: nil, reference: nil, timestamp: nil)
        @postings = postings
        @metadata = metadata
        @reference = reference
        @timestamp = timestamp
      end
    end
  end
end
