# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/paymentstatus_enum'

module OpenApiSDK
  module Shared
    class TaskModulrDescriptor < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :account_id, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('accountID') } }
      field :key, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('key') } }
      field :name, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('name') } }

      sig { params(account_id: T.nilable(String), key: T.nilable(String), name: T.nilable(String)).void }
      def initialize(account_id: nil, key: nil, name: nil)
        @account_id = account_id
        @key = key
        @name = name
      end
    end

    class TaskModulr < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :connector_id, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('connectorId') } }
      field :created_at, DateTime, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('createdAt'), 'decoder': Utils.datetime_from_iso_format(false) } }
      field :descriptor, TaskModulrDescriptor, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('descriptor') } }
      field :id, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('id') } }
      field :state, T::Hash[Symbol, Object], { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('state') } }
      field :status, PaymentStatusEnum, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('status'), 'decoder': Utils.enum_from_string(Shared::PaymentStatusEnum, false) } }
      field :updated_at, DateTime, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('updatedAt'), 'decoder': Utils.datetime_from_iso_format(false) } }
      field :error, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('error') } }

      sig { params(connector_id: String, created_at: DateTime, descriptor: TaskModulrDescriptor, id: String, state: T::Hash[Symbol, Object], status: PaymentStatusEnum, updated_at: DateTime, error: T.nilable(String)).void }
      def initialize(connector_id: nil, created_at: nil, descriptor: nil, id: nil, state: nil, status: nil, updated_at: nil, error: nil)
        @connector_id = connector_id
        @created_at = created_at
        @descriptor = descriptor
        @id = id
        @state = state
        @status = status
        @updated_at = updated_at
        @error = error
      end
    end
  end
end
