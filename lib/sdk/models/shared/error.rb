# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module OpenApiSDK
  module Shared

    class ErrorErrorCodeEnum < T::Enum
      enums do
        VALIDATION = new('VALIDATION')
      end
    end

# 2 - General error
    class Error < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :error_code, ErrorErrorCodeEnum, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('errorCode'), 'decoder': Utils.enum_from_string(Shared::ErrorErrorCodeEnum, false) } }
      field :error_message, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('errorMessage') } }

      sig { params(error_code: ErrorErrorCodeEnum, error_message: String).void }
      def initialize(error_code: nil, error_message: nil)
        @error_code = error_code
        @error_message = error_message
      end
    end
  end
end
