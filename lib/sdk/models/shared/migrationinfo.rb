# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module OpenApiSDK
  module Shared

    class MigrationInfoStateEnum < T::Enum
      enums do
        TO_DO = new('to do')
        DONE = new('done')
      end
    end


    class MigrationInfo < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :date, T.nilable(DateTime), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('date'), 'decoder': Utils.datetime_from_iso_format(true) } }
      field :name, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('name') } }
      field :state, T.nilable(MigrationInfoStateEnum), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('state'), 'decoder': Utils.enum_from_string(Shared::MigrationInfoStateEnum, true) } }
      field :version, T.nilable(Integer), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('version') } }

      sig { params(date: T.nilable(DateTime), name: T.nilable(String), state: T.nilable(MigrationInfoStateEnum), version: T.nilable(Integer)).void }
      def initialize(date: nil, name: nil, state: nil, version: nil)
        @date = date
        @name = name
        @state = state
        @version = version
      end
    end
  end
end
