# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/errorsenum_enum'

module OpenApiSDK
  module Shared# 2 - Error
    class ErrorResponse < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :details, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('details') } }
      field :error_code, T.nilable(ErrorsEnumEnum), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('errorCode'), 'decoder': Utils.enum_from_string(Shared::ErrorsEnumEnum, true) } }
      field :error_message, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('errorMessage') } }

      sig { params(details: T.nilable(String), error_code: T.nilable(ErrorsEnumEnum), error_message: T.nilable(String)).void }
      def initialize(details: nil, error_code: nil, error_message: nil)
        @details = details
        @error_code = error_code
        @error_message = error_message
      end
    end
  end
end
