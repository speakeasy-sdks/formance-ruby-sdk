# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module OpenApiSDK
  module Shared
    class BankingCircleConfig < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :authorization_endpoint, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('authorizationEndpoint') } }
      field :endpoint, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('endpoint') } }
      field :password, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('password') } }
      field :username, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('username') } }

      sig { params(authorization_endpoint: String, endpoint: String, password: String, username: String).void }
      def initialize(authorization_endpoint: nil, endpoint: nil, password: nil, username: nil)
        @authorization_endpoint = authorization_endpoint
        @endpoint = endpoint
        @password = password
        @username = username
      end
    end
  end
end
