# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module OpenApiSDK
  module Shared
    class WorkflowOccurrence < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :created_at, DateTime, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('createdAt'), 'decoder': Utils.datetime_from_iso_format(false) } }
      field :id, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('id') } }
      field :statuses, T::Array[StageStatus], { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('statuses') } }
      field :updated_at, DateTime, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('updatedAt'), 'decoder': Utils.datetime_from_iso_format(false) } }
      field :workflow_id, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('workflowID') } }

      sig { params(created_at: DateTime, id: String, statuses: T::Array[StageStatus], updated_at: DateTime, workflow_id: String).void }
      def initialize(created_at: nil, id: nil, statuses: nil, updated_at: nil, workflow_id: nil)
        @created_at = created_at
        @id = id
        @statuses = statuses
        @updated_at = updated_at
        @workflow_id = workflow_id
      end
    end
  end
end
