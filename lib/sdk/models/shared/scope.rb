# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module OpenApiSDK
  module Shared
    class Scope < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :id, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('id') } }
      field :label, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('label') } }
      field :metadata, T.nilable(T::Hash[Symbol, Object]), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('metadata') } }
      field :transient, T.nilable(T::Array[String]), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('transient') } }

      sig { params(id: String, label: String, metadata: T.nilable(T::Hash[Symbol, Object]), transient: T.nilable(T::Array[String])).void }
      def initialize(id: nil, label: nil, metadata: nil, transient: nil)
        @id = id
        @label = label
        @metadata = metadata
        @transient = transient
      end
    end
  end
end
