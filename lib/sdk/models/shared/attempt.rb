# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/webhooksconfig'

module OpenApiSDK
  module Shared
    class Attempt < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :config, T.nilable(WebhooksConfig), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('config') } }
      field :created_at, T.nilable(DateTime), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('createdAt'), 'decoder': Utils.datetime_from_iso_format(true) } }
      field :id, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('id') } }
      field :next_retry_after, T.nilable(DateTime), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('nextRetryAfter'), 'decoder': Utils.datetime_from_iso_format(true) } }
      field :payload, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('payload') } }
      field :retry_attempt, T.nilable(Integer), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('retryAttempt') } }
      field :status, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('status') } }
      field :status_code, T.nilable(Integer), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('statusCode') } }
      field :updated_at, T.nilable(DateTime), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('updatedAt'), 'decoder': Utils.datetime_from_iso_format(true) } }
      field :webhook_id, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('webhookID') } }

      sig { params(config: T.nilable(WebhooksConfig), created_at: T.nilable(DateTime), id: T.nilable(String), next_retry_after: T.nilable(DateTime), payload: T.nilable(String), retry_attempt: T.nilable(Integer), status: T.nilable(String), status_code: T.nilable(Integer), updated_at: T.nilable(DateTime), webhook_id: T.nilable(String)).void }
      def initialize(config: nil, created_at: nil, id: nil, next_retry_after: nil, payload: nil, retry_attempt: nil, status: nil, status_code: nil, updated_at: nil, webhook_id: nil)
        @config = config
        @created_at = created_at
        @id = id
        @next_retry_after = next_retry_after
        @payload = payload
        @retry_attempt = retry_attempt
        @status = status
        @status_code = status_code
        @updated_at = updated_at
        @webhook_id = webhook_id
      end
    end
  end
end
