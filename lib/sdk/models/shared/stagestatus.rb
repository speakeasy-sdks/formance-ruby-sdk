# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module OpenApiSDK
  module Shared
    class StageStatus < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :occurrence_id, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('occurrenceID') } }
      field :stage, Float, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('stage') } }
      field :started_at, DateTime, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('startedAt'), 'decoder': Utils.datetime_from_iso_format(false) } }
      field :error, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('error') } }
      field :terminated_at, T.nilable(DateTime), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('terminatedAt'), 'decoder': Utils.datetime_from_iso_format(true) } }

      sig { params(occurrence_id: String, stage: Float, started_at: DateTime, error: T.nilable(String), terminated_at: T.nilable(DateTime)).void }
      def initialize(occurrence_id: nil, stage: nil, started_at: nil, error: nil, terminated_at: nil)
        @occurrence_id = occurrence_id
        @stage = stage
        @started_at = started_at
        @error = error
        @terminated_at = terminated_at
      end
    end
  end
end
