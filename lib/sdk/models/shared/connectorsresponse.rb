# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/connector_enum'

module OpenApiSDK
  module Shared
    class ConnectorsResponseData < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :enabled, T.nilable(T::Boolean), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('enabled') } }
      field :provider, T.nilable(ConnectorEnum), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('provider'), 'decoder': Utils.enum_from_string(Shared::ConnectorEnum, true) } }

      sig { params(enabled: T.nilable(T::Boolean), provider: T.nilable(ConnectorEnum)).void }
      def initialize(enabled: nil, provider: nil)
        @enabled = enabled
        @provider = provider
      end
    end
# 2 - OK
    class ConnectorsResponse < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :data, T::Array[ConnectorsResponseData], { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('data') } }

      sig { params(data: T::Array[ConnectorsResponseData]).void }
      def initialize(data: nil)
        @data = data
      end
    end
  end
end
