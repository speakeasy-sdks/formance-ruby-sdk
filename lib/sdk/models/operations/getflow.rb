# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/error'
require_relative '../shared/getworkflowresponse'

module OpenApiSDK
  module Operations
    class GetFlowRequest < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

            # The flow id
      field :flow_id, String, { 'path_param': { 'field_name': 'flowId', 'style': 'simple', 'explode': false } }

      sig { params(flow_id: String).void }
      def initialize(flow_id: nil)
        @flow_id = flow_id
      end
    end

    class GetFlowResponse < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :content_type, String
      field :status_code, Integer      # General error
      field :error, T.nilable(Shared::Error)      # The workflow
      field :get_workflow_response, T.nilable(Shared::GetWorkflowResponse)
      field :raw_response, T.nilable(Faraday::Response)

      sig { params(content_type: String, status_code: Integer, error: T.nilable(Shared::Error), get_workflow_response: T.nilable(Shared::GetWorkflowResponse), raw_response: T.nilable(Faraday::Response)).void }
      def initialize(content_type: nil, status_code: nil, error: nil, get_workflow_response: nil, raw_response: nil)
        @content_type = content_type
        @status_code = status_code
        @error = error
        @get_workflow_response = get_workflow_response
        @raw_response = raw_response
      end
    end
  end
end
