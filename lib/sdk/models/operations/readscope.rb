# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/readscoperesponse'

module OpenApiSDK
  module Operations
    class ReadScopeRequest < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

            # Scope ID
      field :scope_id, String, { 'path_param': { 'field_name': 'scopeId', 'style': 'simple', 'explode': false } }

      sig { params(scope_id: String).void }
      def initialize(scope_id: nil)
        @scope_id = scope_id
      end
    end

    class ReadScopeResponse < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :content_type, String
      field :status_code, Integer
      field :raw_response, T.nilable(Faraday::Response)      # Retrieved scope
      field :read_scope_response, T.nilable(Shared::ReadScopeResponse)

      sig { params(content_type: String, status_code: Integer, raw_response: T.nilable(Faraday::Response), read_scope_response: T.nilable(Shared::ReadScopeResponse)).void }
      def initialize(content_type: nil, status_code: nil, raw_response: nil, read_scope_response: nil)
        @content_type = content_type
        @status_code = status_code
        @raw_response = raw_response
        @read_scope_response = read_scope_response
      end
    end
  end
end
