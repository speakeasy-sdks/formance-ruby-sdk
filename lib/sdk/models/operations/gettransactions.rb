# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/gettransactionsresponse'
require_relative '../shared/walletserrorresponse'

module OpenApiSDK
  module Operations
    class GetTransactionsRequest < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

            # Parameter used in pagination requests.
      # Set to the value of next for the next page of results.
      # Set to the value of previous for the previous page of results.
      # No other parameters can be set when the cursor is set.
      # 
      field :cursor, T.nilable(String), { 'query_param': { 'field_name': 'cursor', 'style': 'form', 'explode': true } }      # The maximum number of results to return per page
      field :page_size, T.nilable(Integer), { 'query_param': { 'field_name': 'pageSize', 'style': 'form', 'explode': true } }      # A wallet ID to filter on
      field :wallet_id, T.nilable(String), { 'query_param': { 'field_name': 'wallet_id', 'style': 'form', 'explode': true } }

      sig { params(cursor: T.nilable(String), page_size: T.nilable(Integer), wallet_id: T.nilable(String)).void }
      def initialize(cursor: nil, page_size: nil, wallet_id: nil)
        @cursor = cursor
        @page_size = page_size
        @wallet_id = wallet_id
      end
    end

    class GetTransactionsResponse < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :content_type, String
      field :status_code, Integer      # OK
      field :get_transactions_response, T.nilable(Shared::GetTransactionsResponse)
      field :raw_response, T.nilable(Faraday::Response)      # Error
      field :wallets_error_response, T.nilable(Shared::WalletsErrorResponse)

      sig { params(content_type: String, status_code: Integer, get_transactions_response: T.nilable(Shared::GetTransactionsResponse), raw_response: T.nilable(Faraday::Response), wallets_error_response: T.nilable(Shared::WalletsErrorResponse)).void }
      def initialize(content_type: nil, status_code: nil, get_transactions_response: nil, raw_response: nil, wallets_error_response: nil)
        @content_type = content_type
        @status_code = status_code
        @get_transactions_response = get_transactions_response
        @raw_response = raw_response
        @wallets_error_response = wallets_error_response
      end
    end
  end
end
