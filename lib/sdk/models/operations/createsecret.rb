# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/createsecretrequest'
require_relative '../shared/createsecretresponse'

module OpenApiSDK
  module Operations
    class CreateSecretRequest < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

            # Client ID
      field :client_id, String, { 'path_param': { 'field_name': 'clientId', 'style': 'simple', 'explode': false } }
      field :create_secret_request, T.nilable(Shared::CreateSecretRequest), { 'request': { 'media_type': 'application/json' } }

      sig { params(client_id: String, create_secret_request: T.nilable(Shared::CreateSecretRequest)).void }
      def initialize(client_id: nil, create_secret_request: nil)
        @client_id = client_id
        @create_secret_request = create_secret_request
      end
    end

    class CreateSecretResponse < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :content_type, String
      field :status_code, Integer      # Created secret
      field :create_secret_response, T.nilable(Shared::CreateSecretResponse)
      field :raw_response, T.nilable(Faraday::Response)

      sig { params(content_type: String, status_code: Integer, create_secret_response: T.nilable(Shared::CreateSecretResponse), raw_response: T.nilable(Faraday::Response)).void }
      def initialize(content_type: nil, status_code: nil, create_secret_response: nil, raw_response: nil)
        @content_type = content_type
        @status_code = status_code
        @create_secret_response = create_secret_response
        @raw_response = raw_response
      end
    end
  end
end
