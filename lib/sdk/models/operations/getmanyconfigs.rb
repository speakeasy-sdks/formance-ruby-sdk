# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/configsresponse'

module OpenApiSDK
  module Operations
    class GetManyConfigsRequest < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

            # Optional filter by endpoint URL
      field :endpoint, T.nilable(String), { 'query_param': { 'field_name': 'endpoint', 'style': 'form', 'explode': true } }      # Optional filter by Config ID
      field :id, T.nilable(String), { 'query_param': { 'field_name': 'id', 'style': 'form', 'explode': true } }

      sig { params(endpoint: T.nilable(String), id: T.nilable(String)).void }
      def initialize(endpoint: nil, id: nil)
        @endpoint = endpoint
        @id = id
      end
    end

    class GetManyConfigsResponse < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :content_type, String
      field :status_code, Integer      # OK
      field :configs_response, T.nilable(Shared::ConfigsResponse)
      field :raw_response, T.nilable(Faraday::Response)

      sig { params(content_type: String, status_code: Integer, configs_response: T.nilable(Shared::ConfigsResponse), raw_response: T.nilable(Faraday::Response)).void }
      def initialize(content_type: nil, status_code: nil, configs_response: nil, raw_response: nil)
        @content_type = content_type
        @status_code = status_code
        @configs_response = configs_response
        @raw_response = raw_response
      end
    end
  end
end
