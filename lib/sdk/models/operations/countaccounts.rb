# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/errorresponse'

module OpenApiSDK
  module Operations
    class CountAccountsRequest < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

            # Name of the ledger.
      field :ledger, String, { 'path_param': { 'field_name': 'ledger', 'style': 'simple', 'explode': false } }      # Filter accounts by address pattern (regular expression placed between ^ and $).
      field :address, T.nilable(String), { 'query_param': { 'field_name': 'address', 'style': 'form', 'explode': true } }      # Filter accounts by metadata key value pairs. Nested objects can be used as seen in the example below.
      field :metadata, T.nilable(T::Hash[Symbol, Object]), { 'query_param': { 'field_name': 'metadata', 'style': 'deepObject', 'explode': true } }

      sig { params(ledger: String, address: T.nilable(String), metadata: T.nilable(T::Hash[Symbol, Object])).void }
      def initialize(ledger: nil, address: nil, metadata: nil)
        @ledger = ledger
        @address = address
        @metadata = metadata
      end
    end

    class CountAccountsResponse < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :content_type, String
      field :status_code, Integer      # Error
      field :error_response, T.nilable(Shared::ErrorResponse)
      field :headers, T.nilable(T::Hash[Symbol, T::Array[String]])
      field :raw_response, T.nilable(Faraday::Response)

      sig { params(content_type: String, status_code: Integer, error_response: T.nilable(Shared::ErrorResponse), headers: T.nilable(T::Hash[Symbol, T::Array[String]]), raw_response: T.nilable(Faraday::Response)).void }
      def initialize(content_type: nil, status_code: nil, error_response: nil, headers: nil, raw_response: nil)
        @content_type = content_type
        @status_code = status_code
        @error_response = error_response
        @headers = headers
        @raw_response = raw_response
      end
    end
  end
end
