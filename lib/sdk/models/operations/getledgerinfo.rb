# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/errorresponse'
require_relative '../shared/ledgerinforesponse'

module OpenApiSDK
  module Operations
    class GetLedgerInfoRequest < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

            # Name of the ledger.
      field :ledger, String, { 'path_param': { 'field_name': 'ledger', 'style': 'simple', 'explode': false } }

      sig { params(ledger: String).void }
      def initialize(ledger: nil)
        @ledger = ledger
      end
    end

    class GetLedgerInfoResponse < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      
      field :content_type, String
      field :status_code, Integer      # Error
      field :error_response, T.nilable(Shared::ErrorResponse)      # OK
      field :ledger_info_response, T.nilable(Shared::LedgerInfoResponse)
      field :raw_response, T.nilable(Faraday::Response)

      sig { params(content_type: String, status_code: Integer, error_response: T.nilable(Shared::ErrorResponse), ledger_info_response: T.nilable(Shared::LedgerInfoResponse), raw_response: T.nilable(Faraday::Response)).void }
      def initialize(content_type: nil, status_code: nil, error_response: nil, ledger_info_response: nil, raw_response: nil)
        @content_type = content_type
        @status_code = status_code
        @error_response = error_response
        @ledger_info_response = ledger_info_response
        @raw_response = raw_response
      end
    end
  end
end
